// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Utilizador {
  utilizadorId Int       @id @default(autoincrement())
  nome         String
  nif          String    @unique
  email        String    @unique
  tipo         UserType
  senha        String
  saldo        Float     @default(0)
  created      DateTime  @default(now())
  updated      DateTime  @updatedAt
  servico      Servico[]
  cliente      Reserva[] @relation(name: "cliente")
}

model Servico {
  servicoId    Int         @id @default(autoincrement())
  nome         String
  descricao    String
  preco        Float
  Utilizador   Utilizador? @relation(fields: [utilizadorId], references: [utilizadorId])
  utilizadorId Int?
  reserva      Reserva[]
}

model Reserva {
  reservaId Int         @id @default(autoincrement())
  preco     Float
  servico   Servico?    @relation(fields: [servicoId], references: [servicoId])
  cliente   Utilizador? @relation(name: "cliente", fields: [clienteId], references: [utilizadorId])
  clienteId Int?
  servicoId Int?
}

enum UserType {
  CLIENTE
  PRESTADOR_DE_SERVICOS
}

enum ReservaStatus {
  PENDENTE
  ACEITO
  CONCLUIDO
  RECUSADO
}
